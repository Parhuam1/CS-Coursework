--Oracle SQL
--Lab Assignment #5 
--Parhuam Jalalian
--Due date: 5/21/21 11:59 p.m.
--Date Handed in: 5/21/21 12:30 A.M.


--Question 1
--a. Create a query that displays the employees names and indicates the amounts of their salaries through asterisks. Each asterisk signifies hundred dollars. Sort the data in descending order of salary. Label the column EMPLOYEE_AND_THEIR_SALARIES.
--Harry **********
--you can round or trunc the salary.
--order by sal.
--function - single row - DECODE or LPAD

SQL> SELECT CONCAT(ename, LPAD(' ', (TRUNC(sal, -2) / 100 + 1), '*'))
  2  AS "EMPLOYEE_AND_THEIR_SALARIES"
  3  FROM emp
  4  ORDER BY sal DESC;

EMPLOYEE_AND_THEIR_SALARIES
--------------------------------------------------------------------------------
KING      **************************************************
SCOTT     ******************************
FORD      ******************************
JONES     *****************************
BLAKE     ****************************
CLARK     ************************
ALLEN     ****************
TURNER    ***************
MILLER    *************
WARD      ************
MARTIN    ************

EMPLOYEE_AND_THEIR_SALARIES
--------------------------------------------------------------------------------
ADAMS     ***********
JAMES     *********
SMITH     ********

14 rows selected.


--b. Display the employees name, username, hire date, salary and salary review date, which is the first Monday after six months of service. Label the column REVIEW. Format the dates to appear in the format mm/dd/yy. Salary should be rounded. Username is first two letters of the name in the lower case.
--single row functions to be applied.
--review date - data function to add months, first monday, format the date in a specfic way.
--salary - round
--username - String - first two letters in lower case.

SQL> SELECT ename AS "Emp. name",
  2  LOWER(SUBSTR(TRIM(ename), 1, 2)) AS "Username",
  3  TO_CHAR(hiredate, 'MM/DD/YY') AS "Hire date",
  4  ROUND(sal, 0) AS "salary",
  5  TO_CHAR(NEXT_DAY(ADD_MONTHS(hiredate, 6), 'MONDAY'), 'MM/DD/YY') AS "REVIEW"
  6  FROM emp;

Emp. name  Username Hire dat     salary REVIEW
---------- -------- -------- ---------- --------
KING       ki       11/17/81       5000 05/24/82
BLAKE      bl       05/01/81       2850 11/02/81
CLARK      cl       06/09/81       2450 12/14/81
JONES      jo       04/02/81       2975 10/05/81
MARTIN     ma       09/28/81       1250 03/29/82
ALLEN      al       02/20/81       1600 08/24/81
TURNER     tu       09/08/81       1500 03/15/82
JAMES      ja       12/03/81        950 06/07/82
WARD       wa       02/22/81       1250 08/24/81
FORD       fo       12/03/81       3000 06/07/82
SMITH      sm       12/17/80        800 06/22/81

Emp. name  Username Hire dat     salary REVIEW
---------- -------- -------- ---------- --------
SCOTT      sc       12/09/82       3000 06/13/83
ADAMS      ad       01/12/83       1100 07/18/83
MILLER     mi       01/23/82       1300 07/26/82

14 rows selected.


--c. Use subquery to display all employees, in department location 'BOSTON' with a salary of greater than $1000.

-- there were no employees within the department 40 with a salary greater than $1000
SQL> SELECT * FROM dept;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON


SQL> SELECT e.ename AS "Emp. name",
  2  LOWER(SUBSTR(TRIM(e.ename), 1, 2)) AS "Username",
  3  TO_CHAR(e.hiredate, 'MM/DD/YY') AS "Hire date",
  4  ROUND(e.sal, 0) AS "salary"
  5  FROM emp e INNER JOIN dept d ON e.deptno = d.deptno
  6  WHERE d.loc = 'BOSTON' AND e.sal > 1000;

no rows selected


-- Here is an example with the department location 'DALLAS' 

SQL> SELECT e.ename AS "Emp. name",
  2  LOWER(SUBSTR(TRIM(e.ename), 1, 2)) AS "Username",
  3  TO_CHAR(e.hiredate, 'MM/DD/YY') AS "Hire date",
  4  ROUND(e.sal, 0) AS "salary"
  5  FROM emp e INNER JOIN dept d ON e.deptno = d.deptno
  6  WHERE d.loc = 'DALLAS' AND e.sal > 1000;

Emp. name  Username Hire dat     salary
---------- -------- -------- ----------
ADAMS      ad       01/12/83       1100
SCOTT      sc       12/09/82       3000
FORD       fo       12/03/81       3000
JONES      jo       04/02/81       2975



--Question 2
--a. Write a query to display the employee name, job, and hire date for all employees who started between 01/01/81 to 12/31/81. Concatenate the name and job together, separated by a space and comma, and label the column Employees.
--use the between operator.
--use ||



SQL> SELECT (TRIM(ename) || ', ' || job) AS "employee name", hiredate
  2  FROM emp
  3  WHERE hiredate BETWEEN TO_DATE('01/01/1981', 'MM/DD/YYYY')
  4  AND TO_DATE('12/31/1981', 'MM/DD/YYYY');

employee name         HIREDATE
--------------------- ---------
KING, PRESIDENT       17-NOV-81
BLAKE, MANAGER        01-MAY-81
CLARK, MANAGER        09-JUN-81
JONES, MANAGER        02-APR-81
MARTIN, SALESMAN      28-SEP-81
ALLEN, SALESMAN       20-FEB-81
TURNER, SALESMAN      08-SEP-81
JAMES, CLERK          03-DEC-81
WARD, SALESMAN        22-FEB-81
FORD, ANALYST         03-DEC-81

10 rows selected.



--b. Explain the usage of correlated subqueries, inline views with an example.
--diff  - subquery - correlated query.
--inline view - queries in from clause.
--site examples with description.

--correlated query
--a correlated subquery is a subquery that uses values from the outer query.
--a correlated subquery may be evaluated once for each row selected by the outer query
--a query that uses a correlated subquery could be slow.
SQL> SELECT e.empno,
  2  e.deptno,
  3  e.ename,
  4  d.loc
  5  FROM emp e, dept d
  6  WHERE d.loc = (SELECT d1.loc FROM dept d1 WHERE d1.deptno = e.deptno);

     EMPNO     DEPTNO ENAME      LOC
---------- ---------- ---------- -------------
      7839         10 KING       NEW YORK
      7782         10 CLARK      NEW YORK
      7934         10 MILLER     NEW YORK
      7566         20 JONES      DALLAS
      7902         20 FORD       DALLAS
      7369         20 SMITH      DALLAS
      7788         20 SCOTT      DALLAS
      7876         20 ADAMS      DALLAS
      7698         30 BLAKE      CHICAGO
      7654         30 MARTIN     CHICAGO
      7499         30 ALLEN      CHICAGO

     EMPNO     DEPTNO ENAME      LOC
---------- ---------- ---------- -------------
      7844         30 TURNER     CHICAGO
      7900         30 JAMES      CHICAGO
      7521         30 WARD       CHICAGO

--inline 
--a SELECT statement in the FROM-clause of another SELECT statement.
-- In-line views are commonly used to simplify complex queries by removing join operations and condensing several separate queries into a single query. 

SQL> SELECT e.empno, e.ename, loc
  2  FROM emp e,
  3  (
  4  SELECT (TRIM(dname) || ' - ' || loc)
  5  AS loc, deptno
  6  FROM dept
  7  ) d
  8  WHERE e.deptno = d.deptno;

     EMPNO ENAME      LOC
---------- ---------- ------------------------------
      7839 KING       ACCOUNTING - NEW YORK
      7782 CLARK      ACCOUNTING - NEW YORK
      7934 MILLER     ACCOUNTING - NEW YORK
      7876 ADAMS      RESEARCH - DALLAS
      7788 SCOTT      RESEARCH - DALLAS
      7369 SMITH      RESEARCH - DALLAS
      7902 FORD       RESEARCH - DALLAS
      7566 JONES      RESEARCH - DALLAS
      7521 WARD       SALES - CHICAGO
      7900 JAMES      SALES - CHICAGO
      7499 ALLEN      SALES - CHICAGO

     EMPNO ENAME      LOC
---------- ---------- ------------------------------
      7654 MARTIN     SALES - CHICAGO
      7698 BLAKE      SALES - CHICAGO
      7844 TURNER     SALES - CHICAGO

14 rows selected.
